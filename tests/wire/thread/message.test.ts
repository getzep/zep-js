/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { ZepClient } from "../../../src/Client";

describe("Message", () => {
    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new ZepClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { metadata: { key: "value" } };
        const rawResponseBody = {
            content: "content",
            created_at: "created_at",
            metadata: { key: "value" },
            name: "name",
            processed: true,
            role: "norole",
            uuid: "uuid",
        };
        server
            .mockEndpoint()
            .patch("/messages/messageUUID")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.thread.message.update("messageUUID", {
            metadata: {
                key: "value",
            },
        });
        expect(response).toEqual({
            content: "content",
            createdAt: "created_at",
            metadata: {
                key: "value",
            },
            name: "name",
            processed: true,
            role: "norole",
            uuid: "uuid",
        });
    });
});
