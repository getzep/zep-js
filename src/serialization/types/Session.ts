/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Zep from "../../api/index";
import * as core from "../../core";
import { FactRatingInstruction } from "./FactRatingInstruction";

export const Session: core.serialization.ObjectSchema<serializers.Session.Raw, Zep.Session> = core.serialization.object(
    {
        classifications: core.serialization.record(core.serialization.string(), core.serialization.string()),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        deletedAt: core.serialization.property("deleted_at", core.serialization.string()),
        endedAt: core.serialization.property("ended_at", core.serialization.string()),
        factRatingInstruction: core.serialization.property("fact_rating_instruction", FactRatingInstruction.optional()),
        facts: core.serialization.list(core.serialization.string()),
        id: core.serialization.number(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        projectUuid: core.serialization.property("project_uuid", core.serialization.string()),
        sessionId: core.serialization.property("session_id", core.serialization.string()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string()),
        userId: core.serialization.property("user_id", core.serialization.string()),
        uuid: core.serialization.string(),
    },
);

export declare namespace Session {
    export interface Raw {
        classifications: Record<string, string>;
        created_at: string;
        deleted_at: string;
        ended_at: string;
        fact_rating_instruction?: FactRatingInstruction.Raw | null;
        facts: string[];
        id: number;
        metadata: Record<string, unknown>;
        project_uuid: string;
        session_id: string;
        updated_at: string;
        user_id: string;
        uuid: string;
    }
}
