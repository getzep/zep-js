/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Zep from "../../api/index";
import * as core from "../../core";
import { DateFilter } from "./DateFilter";

export const SearchFilters: core.serialization.ObjectSchema<serializers.SearchFilters.Raw, Zep.SearchFilters> =
    core.serialization.object({
        createdAt: core.serialization.property(
            "created_at",
            core.serialization.list(core.serialization.list(DateFilter)).optional(),
        ),
        edgeTypes: core.serialization.property(
            "edge_types",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        expiredAt: core.serialization.property(
            "expired_at",
            core.serialization.list(core.serialization.list(DateFilter)).optional(),
        ),
        invalidAt: core.serialization.property(
            "invalid_at",
            core.serialization.list(core.serialization.list(DateFilter)).optional(),
        ),
        nodeLabels: core.serialization.property(
            "node_labels",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        validAt: core.serialization.property(
            "valid_at",
            core.serialization.list(core.serialization.list(DateFilter)).optional(),
        ),
    });

export declare namespace SearchFilters {
    export interface Raw {
        created_at?: DateFilter.Raw[][] | null;
        edge_types?: string[] | null;
        expired_at?: DateFilter.Raw[][] | null;
        invalid_at?: DateFilter.Raw[][] | null;
        node_labels?: string[] | null;
        valid_at?: DateFilter.Raw[][] | null;
    }
}
