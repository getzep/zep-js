/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as Zep from "../../api/index.js";
import * as core from "../../core/index.js";

export const EntityEdge: core.serialization.ObjectSchema<serializers.EntityEdge.Raw, Zep.EntityEdge> =
    core.serialization.object({
        attributes: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        episodes: core.serialization.list(core.serialization.string()).optional(),
        expiredAt: core.serialization.property("expired_at", core.serialization.string().optional()),
        fact: core.serialization.string(),
        invalidAt: core.serialization.property("invalid_at", core.serialization.string().optional()),
        name: core.serialization.string(),
        score: core.serialization.number().optional(),
        sourceNodeUuid: core.serialization.property("source_node_uuid", core.serialization.string()),
        targetNodeUuid: core.serialization.property("target_node_uuid", core.serialization.string()),
        uuid: core.serialization.string(),
        validAt: core.serialization.property("valid_at", core.serialization.string().optional()),
    });

export declare namespace EntityEdge {
    export interface Raw {
        attributes?: Record<string, unknown> | null;
        created_at: string;
        episodes?: string[] | null;
        expired_at?: string | null;
        fact: string;
        invalid_at?: string | null;
        name: string;
        score?: number | null;
        source_node_uuid: string;
        target_node_uuid: string;
        uuid: string;
        valid_at?: string | null;
    }
}
