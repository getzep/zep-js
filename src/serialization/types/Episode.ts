/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Zep from "../../api/index";
import * as core from "../../core";
import { RoleType } from "./RoleType";
import { GraphDataType } from "./GraphDataType";

export const Episode: core.serialization.ObjectSchema<serializers.Episode.Raw, Zep.Episode> = core.serialization.object(
    {
        content: core.serialization.string(),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        processed: core.serialization.boolean().optional(),
        role: core.serialization.string().optional(),
        roleType: core.serialization.property("role_type", RoleType.optional()),
        score: core.serialization.number().optional(),
        sessionId: core.serialization.property("session_id", core.serialization.string().optional()),
        source: GraphDataType.optional(),
        sourceDescription: core.serialization.property("source_description", core.serialization.string().optional()),
        uuid: core.serialization.string(),
    },
);

export declare namespace Episode {
    export interface Raw {
        content: string;
        created_at: string;
        processed?: boolean | null;
        role?: string | null;
        role_type?: RoleType.Raw | null;
        score?: number | null;
        session_id?: string | null;
        source?: GraphDataType.Raw | null;
        source_description?: string | null;
        uuid: string;
    }
}
