/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Zep from "../../../../../api/index";
import * as core from "../../../../../core";
import { FactRatingInstruction } from "../../../../types/FactRatingInstruction";

export const CreateUserRequest: core.serialization.Schema<serializers.CreateUserRequest.Raw, Zep.CreateUserRequest> =
    core.serialization.object({
        email: core.serialization.string(),
        factRatingInstruction: core.serialization.property("fact_rating_instruction", FactRatingInstruction),
        firstName: core.serialization.property("first_name", core.serialization.string()),
        lastName: core.serialization.property("last_name", core.serialization.string()),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        userId: core.serialization.property("user_id", core.serialization.string()),
    });

export declare namespace CreateUserRequest {
    export interface Raw {
        email: string;
        fact_rating_instruction: FactRatingInstruction.Raw;
        first_name: string;
        last_name: string;
        metadata: Record<string, unknown>;
        user_id: string;
    }
}
