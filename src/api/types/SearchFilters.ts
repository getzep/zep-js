/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Zep from "../index.js";

export interface SearchFilters {
    /**
     * 2D array of date filters for the created_at field.
     * The outer array elements are combined with OR logic.
     * The inner array elements are combined with AND logic.
     * Example: [[{">", date1}, {"<", date2}], [{"=", date3}]]
     * This translates to: (created_at > date1 AND created_at < date2) OR (created_at = date3)
     */
    created_at?: Zep.DateFilter[][];
    /** List of edge types to filter on */
    edge_types?: string[];
    /**
     * 2D array of date filters for the expired_at field.
     * The outer array elements are combined with OR logic.
     * The inner array elements are combined with AND logic.
     * Example: [[{">", date1}, {"<", date2}], [{"=", date3}]]
     * This translates to: (expired_at > date1 AND expired_at < date2) OR (expired_at = date3)
     */
    expired_at?: Zep.DateFilter[][];
    /**
     * 2D array of date filters for the invalid_at field.
     * The outer array elements are combined with OR logic.
     * The inner array elements are combined with AND logic.
     * Example: [[{">", date1}, {"<", date2}], [{"=", date3}]]
     * This translates to: (invalid_at > date1 AND invalid_at < date2) OR (invalid_at = date3)
     */
    invalid_at?: Zep.DateFilter[][];
    /** List of node labels to filter on */
    node_labels?: string[];
    /**
     * 2D array of date filters for the valid_at field.
     * The outer array elements are combined with OR logic.
     * The inner array elements are combined with AND logic.
     * Example: [[{">", date1}, {"<", date2}], [{"=", date3}]]
     * This translates to: (valid_at > date1 AND valid_at < date2) OR (valid_at = date3)
     */
    valid_at?: Zep.DateFilter[][];
}
